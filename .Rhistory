#file.remove(file.path(tmpRAW,toRemove))
#dataNorm<-preprocessGEO(tmpRAW,3)
#save Rda file
#save(dataNorm, file=paste0(dataPath,species[i],"/",platforms[i],"/",toProcessIDs[j],".Rda"))
#save .csv file
#d<-round(t(dataNorm), digits = 4)
#create proper column for csv
#row.names(d)<-samples
#d<-cbind.data.frame(samples=samples,d)
# write data in csv
#write.table(d, file=paste0(dataPath,species[i],"/",platforms[i],"/",toProcessIDs[j],".csv"),
#            sep=",",row.names = F)
#clear tmpRAW
#file.remove(dir(tmpRAW, full.names=TRUE))
#update index file
#indFile<-read.table(paste0(dataPath,platforms[i],".txt"), sep="\t", header=T)
print(j)
}
i
j
library(SCAN.UPC)
library(doParallel)
library(GEOquery)
library(rentrez)
options(stringsAsFactors = F)
source('E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/src/GEO/downloadPhenotypePlatform.R', echo=TRUE)
source('E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/src/GEO/downloadPhenotype.R', echo=TRUE)
source('E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/src/GEO/controlSamples.R', echo=TRUE)
setwd("E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/")
dataPath<-"//algonas.csd.uoc.gr/Public/Dataome/"
tmpRAW<-"//algonas.csd.uoc.gr/Public/Dataome/tempRAW/"
#list of GEO platforms currently curated in BioDataome
#list of GEO platforms currently curated in BioDataome
Platforms<-read.table("UsefulFiles/Platforms.txt", sep="\t", header=T)
#find gene epxression microarry GEO platforms
platforms<-Platforms$Technology[which(Platforms$Entity=="Gene expression" & Platforms$Type=="in situ oligonucleotide")]
species<- Platforms$Species[which(Platforms$Entity=="Gene expression" & Platforms$Type=="in situ oligonucleotide")]
i=2
#find r_search ids that are not already in BioDataome
processedIDs<-list.files(file.path(dataPath,species[i],platforms[i]))
processedIDs<-processedIDs[grep(pattern="GSE[0-9]+.Rda$", processedIDs)]
processedIDs<-unlist(strsplit(processedIDs, ".Rda"))
#load entrezID to GSE files
#eToGSE<-get(load(paste0("UsefulFiles/","eToGSE_",platforms[i],".Rda")))
#find unique records
#eToGSEU<-paste0("GSE",unique(eToGSE[,1]))
#toProcessIDs<-setdiff(eToGSEU,processedIDs)
#for all datasets not already in in BioDataome
for (j in 3697:length(processedIDs)){
#download annotation
phenos<-downloadPhenotypePlatform(processedIDs[j],platforms[i])
samples<-row.names(phenos)
#add control information in annotation
controls<-controlSamples(phenos)
phenos<-cbind(samples=samples,class=controls[match(samples,controls[,1]),2],phenos)
#write annotation file in BioDataome
write.table(phenos, file=paste0(dataPath,species[i],"/",platforms[i],"/",processedIDs[j],"_Annot.csv"),
sep=",",row.names = F)
#download raw files
#downloadRaw(processedIDs[j],tmpRAW)
#untar(file.path(tmpRAW,paste0(processedIDs[j],"_RAW.tar")), exdir = tmpRAW)
#file.remove(file.path(tmpRAW,paste0(processedIDs[j],"_RAW.tar")))
#by default downloadRaw will download all CEL files for the specific GSE
#celfiles<-list.files(tmpRAW, pattern = ".cel",ignore.case = T)
#keep only cel files that have annotation
#celsKeep<-celfiles[startsWith(celfiles,samples)]
#remove the rest
#toRemove<-setdiff(celfiles,celsKeep)
#file.remove(file.path(tmpRAW,toRemove))
#dataNorm<-preprocessGEO(tmpRAW,3)
#save Rda file
#save(dataNorm, file=paste0(dataPath,species[i],"/",platforms[i],"/",toProcessIDs[j],".Rda"))
#save .csv file
#d<-round(t(dataNorm), digits = 4)
#create proper column for csv
#row.names(d)<-samples
#d<-cbind.data.frame(samples=samples,d)
# write data in csv
#write.table(d, file=paste0(dataPath,species[i],"/",platforms[i],"/",toProcessIDs[j],".csv"),
#            sep=",",row.names = F)
#clear tmpRAW
#file.remove(dir(tmpRAW, full.names=TRUE))
#update index file
#indFile<-read.table(paste0(dataPath,platforms[i],".txt"), sep="\t", header=T)
print(j)
}
j
library(SCAN.UPC)
library(doParallel)
library(GEOquery)
library(rentrez)
options(stringsAsFactors = F)
source('E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/src/GEO/downloadPhenotypePlatform.R', echo=TRUE)
source('E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/src/GEO/downloadPhenotype.R', echo=TRUE)
source('E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/src/GEO/controlSamples.R', echo=TRUE)
setwd("E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/")
dataPath<-"//algonas.csd.uoc.gr/Public/Dataome/"
tmpRAW<-"//algonas.csd.uoc.gr/Public/Dataome/tempRAW/"
#list of GEO platforms currently curated in BioDataome
#list of GEO platforms currently curated in BioDataome
Platforms<-read.table("UsefulFiles/Platforms.txt", sep="\t", header=T)
#find gene epxression microarry GEO platforms
platforms<-Platforms$Technology[which(Platforms$Entity=="Gene expression" & Platforms$Type=="in situ oligonucleotide")]
species<- Platforms$Species[which(Platforms$Entity=="Gene expression" & Platforms$Type=="in situ oligonucleotide")]
i=2
#find r_search ids that are not already in BioDataome
processedIDs<-list.files(file.path(dataPath,species[i],platforms[i]))
processedIDs<-processedIDs[grep(pattern="GSE[0-9]+.Rda$", processedIDs)]
processedIDs<-unlist(strsplit(processedIDs, ".Rda"))
#load entrezID to GSE files
#eToGSE<-get(load(paste0("UsefulFiles/","eToGSE_",platforms[i],".Rda")))
#find unique records
#eToGSEU<-paste0("GSE",unique(eToGSE[,1]))
#toProcessIDs<-setdiff(eToGSEU,processedIDs)
for (j in 4344:length(processedIDs)){
#download annotation
phenos<-downloadPhenotypePlatform(processedIDs[j],platforms[i])
samples<-row.names(phenos)
#add control information in annotation
controls<-controlSamples(phenos)
phenos<-cbind(samples=samples,class=controls[match(samples,controls[,1]),2],phenos)
#write annotation file in BioDataome
write.table(phenos, file=paste0(dataPath,species[i],"/",platforms[i],"/",processedIDs[j],"_Annot.csv"),
sep=",",row.names = F)
#download raw files
#downloadRaw(processedIDs[j],tmpRAW)
#untar(file.path(tmpRAW,paste0(processedIDs[j],"_RAW.tar")), exdir = tmpRAW)
#file.remove(file.path(tmpRAW,paste0(processedIDs[j],"_RAW.tar")))
#by default downloadRaw will download all CEL files for the specific GSE
#celfiles<-list.files(tmpRAW, pattern = ".cel",ignore.case = T)
#keep only cel files that have annotation
#celsKeep<-celfiles[startsWith(celfiles,samples)]
#remove the rest
#toRemove<-setdiff(celfiles,celsKeep)
#file.remove(file.path(tmpRAW,toRemove))
#dataNorm<-preprocessGEO(tmpRAW,3)
#save Rda file
#save(dataNorm, file=paste0(dataPath,species[i],"/",platforms[i],"/",toProcessIDs[j],".Rda"))
#save .csv file
#d<-round(t(dataNorm), digits = 4)
#create proper column for csv
#row.names(d)<-samples
#d<-cbind.data.frame(samples=samples,d)
# write data in csv
#write.table(d, file=paste0(dataPath,species[i],"/",platforms[i],"/",toProcessIDs[j],".csv"),
#            sep=",",row.names = F)
#clear tmpRAW
#file.remove(dir(tmpRAW, full.names=TRUE))
#update index file
#indFile<-read.table(paste0(dataPath,platforms[i],".txt"), sep="\t", header=T)
print(j)
}
for (i in 3:length(platforms)){
#query GEO for all series of a specific platform which also provide CEL files
# r_search <- entrez_search(db="gds", term=paste0("CEL[SFIL] AND ",platforms[i],"[ACCN]"),
#                          use_history=TRUE)
#find number of records
#count<-r_search$count
#call entrez_search again to get ALL entrezIDs
#r_search <- entrez_search(db="gds", term=paste0("CEL[SFIL] AND ",platforms[i],"[ACCN]"),
#                          retmax =count, use_history=TRUE)
#entrezIDs<-r_search$ids
#find r_search ids that are not already in BioDataome
processedIDs<-list.files(file.path(dataPath,species[i],platforms[i]))
processedIDs<-processedIDs[grep(pattern="GSE[0-9]+.Rda$", processedIDs)]
processedIDs<-unlist(strsplit(processedIDs, ".Rda"))
#load entrezID to GSE files
#eToGSE<-get(load(paste0("UsefulFiles/","eToGSE_",platforms[i],".Rda")))
#find unique records
#eToGSEU<-paste0("GSE",unique(eToGSE[,1]))
#toProcessIDs<-setdiff(eToGSEU,processedIDs)
#for all datasets not already in in BioDataome
for (j in 1:length(processedIDs)){
#download annotation
phenos<-downloadPhenotypePlatform(processedIDs[j],platforms[i])
samples<-row.names(phenos)
#add control information in annotation
controls<-controlSamples(phenos)
phenos<-cbind(samples=samples,class=controls[match(samples,controls[,1]),2],phenos)
#write annotation file in BioDataome
write.table(phenos, file=paste0(dataPath,species[i],"/",platforms[i],"/",processedIDs[j],"_Annot.csv"),
sep=",",row.names = F)
#download raw files
#downloadRaw(processedIDs[j],tmpRAW)
#untar(file.path(tmpRAW,paste0(processedIDs[j],"_RAW.tar")), exdir = tmpRAW)
#file.remove(file.path(tmpRAW,paste0(processedIDs[j],"_RAW.tar")))
#by default downloadRaw will download all CEL files for the specific GSE
#celfiles<-list.files(tmpRAW, pattern = ".cel",ignore.case = T)
#keep only cel files that have annotation
#celsKeep<-celfiles[startsWith(celfiles,samples)]
#remove the rest
#toRemove<-setdiff(celfiles,celsKeep)
#file.remove(file.path(tmpRAW,toRemove))
#dataNorm<-preprocessGEO(tmpRAW,3)
#save Rda file
#save(dataNorm, file=paste0(dataPath,species[i],"/",platforms[i],"/",toProcessIDs[j],".Rda"))
#save .csv file
#d<-round(t(dataNorm), digits = 4)
#create proper column for csv
#row.names(d)<-samples
#d<-cbind.data.frame(samples=samples,d)
# write data in csv
#write.table(d, file=paste0(dataPath,species[i],"/",platforms[i],"/",toProcessIDs[j],".csv"),
#            sep=",",row.names = F)
#clear tmpRAW
#file.remove(dir(tmpRAW, full.names=TRUE))
#update index file
#indFile<-read.table(paste0(dataPath,platforms[i],".txt"), sep="\t", header=T)
print(j)
}
print(i)
}
i
j
platforms
library(SCAN.UPC)
library(doParallel)
library(GEOquery)
library(rentrez)
options(stringsAsFactors = F)
source('E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/src/GEO/downloadPhenotypePlatform.R', echo=TRUE)
source('E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/src/GEO/downloadPhenotype.R', echo=TRUE)
source('E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/src/GEO/controlSamples.R', echo=TRUE)
setwd("E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/")
dataPath<-"//algonas.csd.uoc.gr/Public/Dataome/"
tmpRAW<-"//algonas.csd.uoc.gr/Public/Dataome/tempRAW/"
#list of GEO platforms currently curated in BioDataome
#list of GEO platforms currently curated in BioDataome
Platforms<-read.table("UsefulFiles/Platforms.txt", sep="\t", header=T)
#find gene epxression microarry GEO platforms
platforms<-Platforms$Technology[which(Platforms$Entity=="Gene expression" & Platforms$Type=="in situ oligonucleotide")]
species<- Platforms$Species[which(Platforms$Entity=="Gene expression" & Platforms$Type=="in situ oligonucleotide")]
i=4
#find number of records
#count<-r_search$count
#call entrez_search again to get ALL entrezIDs
#r_search <- entrez_search(db="gds", term=paste0("CEL[SFIL] AND ",platforms[i],"[ACCN]"),
#                          retmax =count, use_history=TRUE)
#entrezIDs<-r_search$ids
#find r_search ids that are not already in BioDataome
processedIDs<-list.files(file.path(dataPath,species[i],platforms[i]))
processedIDs<-processedIDs[grep(pattern="GSE[0-9]+.Rda$", processedIDs)]
processedIDs<-unlist(strsplit(processedIDs, ".Rda"))
#load entrezID to GSE files
#eToGSE<-get(load(paste0("UsefulFiles/","eToGSE_",platforms[i],".Rda")))
#find unique records
#eToGSEU<-paste0("GSE",unique(eToGSE[,1]))
#toProcessIDs<-setdiff(eToGSEU,processedIDs)
#for all datasets not already in in BioDataome
for (j in 245:length(processedIDs)){
#download annotation
phenos<-downloadPhenotypePlatform(processedIDs[j],platforms[i])
samples<-row.names(phenos)
#add control information in annotation
controls<-controlSamples(phenos)
phenos<-cbind(samples=samples,class=controls[match(samples,controls[,1]),2],phenos)
#write annotation file in BioDataome
write.table(phenos, file=paste0(dataPath,species[i],"/",platforms[i],"/",processedIDs[j],"_Annot.csv"),
sep=",",row.names = F)
#download raw files
#downloadRaw(processedIDs[j],tmpRAW)
#untar(file.path(tmpRAW,paste0(processedIDs[j],"_RAW.tar")), exdir = tmpRAW)
#file.remove(file.path(tmpRAW,paste0(processedIDs[j],"_RAW.tar")))
#by default downloadRaw will download all CEL files for the specific GSE
#celfiles<-list.files(tmpRAW, pattern = ".cel",ignore.case = T)
#keep only cel files that have annotation
#celsKeep<-celfiles[startsWith(celfiles,samples)]
#remove the rest
#toRemove<-setdiff(celfiles,celsKeep)
#file.remove(file.path(tmpRAW,toRemove))
#dataNorm<-preprocessGEO(tmpRAW,3)
#save Rda file
#save(dataNorm, file=paste0(dataPath,species[i],"/",platforms[i],"/",toProcessIDs[j],".Rda"))
#save .csv file
#d<-round(t(dataNorm), digits = 4)
#create proper column for csv
#row.names(d)<-samples
#d<-cbind.data.frame(samples=samples,d)
# write data in csv
#write.table(d, file=paste0(dataPath,species[i],"/",platforms[i],"/",toProcessIDs[j],".csv"),
#            sep=",",row.names = F)
#clear tmpRAW
#file.remove(dir(tmpRAW, full.names=TRUE))
#update index file
#indFile<-read.table(paste0(dataPath,platforms[i],".txt"), sep="\t", header=T)
print(j)
}
j
length(processedIDs)
platforms[i]
library(SCAN.UPC)
library(doParallel)
library(GEOquery)
library(rentrez)
options(stringsAsFactors = F)
source('E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/src/GEO/downloadPhenotypePlatform.R', echo=TRUE)
source('E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/src/GEO/downloadPhenotype.R', echo=TRUE)
source('E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/src/GEO/controlSamples.R', echo=TRUE)
setwd("E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/")
dataPath<-"//algonas.csd.uoc.gr/Public/Dataome/"
tmpRAW<-"//algonas.csd.uoc.gr/Public/Dataome/tempRAW/"
#list of GEO platforms currently curated in BioDataome
#list of GEO platforms currently curated in BioDataome
Platforms<-read.table("UsefulFiles/Platforms.txt", sep="\t", header=T)
#find gene epxression microarry GEO platforms
platforms<-Platforms$Technology[which(Platforms$Entity=="Gene expression" & Platforms$Type=="in situ oligonucleotide")]
species<- Platforms$Species[which(Platforms$Entity=="Gene expression" & Platforms$Type=="in situ oligonucleotide")]
platforms<-c(platforms,"GPL13534")
i=5
#find r_search ids that are not already in BioDataome
processedIDs<-list.files(file.path(dataPath,species[i],platforms[i]))
processedIDs<-processedIDs[grep(pattern="GSE[0-9]+.Rda$", processedIDs)]
processedIDs<-unlist(strsplit(processedIDs, ".Rda"))
file.path(dataPath,species[i],platforms[i])
species
species<-c(species,"Homo sapiens")
#query GEO for all series of a specific platform which also provide CEL files
# r_search <- entrez_search(db="gds", term=paste0("CEL[SFIL] AND ",platforms[i],"[ACCN]"),
#                          use_history=TRUE)
#find number of records
#count<-r_search$count
#call entrez_search again to get ALL entrezIDs
#r_search <- entrez_search(db="gds", term=paste0("CEL[SFIL] AND ",platforms[i],"[ACCN]"),
#                          retmax =count, use_history=TRUE)
#entrezIDs<-r_search$ids
#find r_search ids that are not already in BioDataome
processedIDs<-list.files(file.path(dataPath,species[i],platforms[i]))
processedIDs<-processedIDs[grep(pattern="GSE[0-9]+.Rda$", processedIDs)]
processedIDs<-unlist(strsplit(processedIDs, ".Rda"))
j=1
processedIDs[j],platforms[i]
processedIDs[j]
platforms[i]
phenos<-downloadPhenotypePlatform(processedIDs[j],platforms[i])
samples<-row.names(phenos)
#add control information in annotation
controls<-controlSamples(phenos)
phenos<-cbind(samples=samples,class=controls[match(samples,controls[,1]),2],phenos)
View(phenos)
paste0(dataPath,species[i],"/",platforms[i],"/",processedIDs[j],"_Annot.csv")
write.table(phenos, file=paste0(dataPath,species[i],"/",platforms[i],"/",processedIDs[j],"_Annot.csv"),
sep=",",row.names = F)
for (j in 2:length(processedIDs)){
#download annotation
phenos<-downloadPhenotypePlatform(processedIDs[j],platforms[i])
samples<-row.names(phenos)
#add control information in annotation
controls<-controlSamples(phenos)
phenos<-cbind(samples=samples,class=controls[match(samples,controls[,1]),2],phenos)
#write annotation file in BioDataome
write.table(phenos, file=paste0(dataPath,species[i],"/",platforms[i],"/",processedIDs[j],"_Annot.csv"),
sep=",",row.names = F)
#download raw files
#downloadRaw(processedIDs[j],tmpRAW)
#untar(file.path(tmpRAW,paste0(processedIDs[j],"_RAW.tar")), exdir = tmpRAW)
#file.remove(file.path(tmpRAW,paste0(processedIDs[j],"_RAW.tar")))
#by default downloadRaw will download all CEL files for the specific GSE
#celfiles<-list.files(tmpRAW, pattern = ".cel",ignore.case = T)
#keep only cel files that have annotation
#celsKeep<-celfiles[startsWith(celfiles,samples)]
#remove the rest
#toRemove<-setdiff(celfiles,celsKeep)
#file.remove(file.path(tmpRAW,toRemove))
#dataNorm<-preprocessGEO(tmpRAW,3)
#save Rda file
#save(dataNorm, file=paste0(dataPath,species[i],"/",platforms[i],"/",toProcessIDs[j],".Rda"))
#save .csv file
#d<-round(t(dataNorm), digits = 4)
#create proper column for csv
#row.names(d)<-samples
#d<-cbind.data.frame(samples=samples,d)
# write data in csv
#write.table(d, file=paste0(dataPath,species[i],"/",platforms[i],"/",toProcessIDs[j],".csv"),
#            sep=",",row.names = F)
#clear tmpRAW
#file.remove(dir(tmpRAW, full.names=TRUE))
#update index file
#indFile<-read.table(paste0(dataPath,platforms[i],".txt"), sep="\t", header=T)
print(j)
}
j
library(SCAN.UPC)
library(doParallel)
library(GEOquery)
library(rentrez)
options(stringsAsFactors = F)
source('E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/src/GEO/downloadPhenotypePlatform.R', echo=TRUE)
source('E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/src/GEO/downloadPhenotype.R', echo=TRUE)
source('E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/src/GEO/controlSamples.R', echo=TRUE)
setwd("E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/")
dataPath<-"//algonas.csd.uoc.gr/Public/Dataome/"
tmpRAW<-"//algonas.csd.uoc.gr/Public/Dataome/tempRAW/"
i=5
platforms[i]
species[i]
#                          use_history=TRUE)
#find number of records
#count<-r_search$count
#call entrez_search again to get ALL entrezIDs
#r_search <- entrez_search(db="gds", term=paste0("CEL[SFIL] AND ",platforms[i],"[ACCN]"),
#                          retmax =count, use_history=TRUE)
#entrezIDs<-r_search$ids
#find r_search ids that are not already in BioDataome
processedIDs<-list.files(file.path(dataPath,species[i],platforms[i]))
processedIDs<-processedIDs[grep(pattern="GSE[0-9]+.Rda$", processedIDs)]
processedIDs<-unlist(strsplit(processedIDs, ".Rda"))
#load entrezID to GSE files
#eToGSE<-get(load(paste0("UsefulFiles/","eToGSE_",platforms[i],".Rda")))
for (j in 114:length(processedIDs)){
#download annotation
phenos<-downloadPhenotypePlatform(processedIDs[j],platforms[i])
samples<-row.names(phenos)
#add control information in annotation
controls<-controlSamples(phenos)
phenos<-cbind(samples=samples,class=controls[match(samples,controls[,1]),2],phenos)
#write annotation file in BioDataome
write.table(phenos, file=paste0(dataPath,species[i],"/",platforms[i],"/",processedIDs[j],"_Annot.csv"),
sep=",",row.names = F)
#download raw files
#downloadRaw(processedIDs[j],tmpRAW)
#untar(file.path(tmpRAW,paste0(processedIDs[j],"_RAW.tar")), exdir = tmpRAW)
#file.remove(file.path(tmpRAW,paste0(processedIDs[j],"_RAW.tar")))
#by default downloadRaw will download all CEL files for the specific GSE
#celfiles<-list.files(tmpRAW, pattern = ".cel",ignore.case = T)
#keep only cel files that have annotation
#celsKeep<-celfiles[startsWith(celfiles,samples)]
#remove the rest
#toRemove<-setdiff(celfiles,celsKeep)
#file.remove(file.path(tmpRAW,toRemove))
#dataNorm<-preprocessGEO(tmpRAW,3)
#save Rda file
#save(dataNorm, file=paste0(dataPath,species[i],"/",platforms[i],"/",toProcessIDs[j],".Rda"))
#save .csv file
#d<-round(t(dataNorm), digits = 4)
#create proper column for csv
#row.names(d)<-samples
#d<-cbind.data.frame(samples=samples,d)
# write data in csv
#write.table(d, file=paste0(dataPath,species[i],"/",platforms[i],"/",toProcessIDs[j],".csv"),
#            sep=",",row.names = F)
#clear tmpRAW
#file.remove(dir(tmpRAW, full.names=TRUE))
#update index file
#indFile<-read.table(paste0(dataPath,platforms[i],".txt"), sep="\t", header=T)
print(j)
}
dataPath<-"//algonas.csd.uoc.gr/Public/Dataome/"
Platforms<-read.table("UsefulFiles/Platforms.txt", sep="\t", header=T)
i=1
file.path(dataPath,platforms[i])
paste0(dataPath,platforms[i],".txt")
indFile<-read.table(paste0(dataPath,platforms[i],".txt"), sep="\t", header=T)
View(indFile)
annotCsv<-list.files(file.path(dataPath,platforms[i]), "Annot.csv")
file.path(dataPath,platforms[i]), "Annot.csv"
annotCsv<-list.files(file.path(dataPath,platforms[i]), "Annot.csv"))
file.path(dataPath,platforms[i])
annotCsv<-list.files(file.path(dataPath,platforms[i]), "$Annot.csv"))
annotCsv<-list.files(file.path(dataPath,platforms[i]), "$Annot.csv")
?list.files
annotCsv<-list.files(file.path(dataPath,platforms[i]), "$Annot.csv",ignore.case = T)
annotCsv
paste0(dataPath,platforms[i])
annotCsv<-list.files(paste0(dataPath,platforms[i]), "$Annot.csv",ignore.case = T)
annotCsv<-list.files(paste0(dataPath,platforms[i],"/"), "$Annot.csv",ignore.case = T)
annotCsv<-list.files(paste0(dataPath,platforms[i]))
dataPath<-"//algonas.csd.uoc.gr/Public/Dataome/"
Platforms<-read.table("UsefulFiles/Platforms.txt", sep="\t", header=T)
View(Platforms)
dataPath<-"//algonas.csd.uoc.gr/Public/Dataome/"
Platforms<-read.table("UsefulFiles/Platforms.txt", sep="\t", header=T)
i=1
indFile<-read.table(paste0(dataPath,Platforms$Technology[i],".txt"), sep="\t", header=T)
annotCsv<-list.files(paste0(dataPath,Platforms$Species[i],Platforms$Technology[i]))
paste0(dataPath,Platforms$Technology[i],".txt")
paste0(dataPath,Platforms$Species[i],Platforms$Technology[i])
paste0(dataPath,Platforms$Species[i],"/",Platforms$Technology[i])
annotCsv<-list.files(paste0(dataPath,Platforms$Species[i],"/",Platforms$Technology[i]),"Annot.csv")
?gsub
gsub("GSE[0-9]+.csv$", annotCsv,ignore.case = T)
annotCsv
substr(annotCsv,"GSE[0-9]+",".csv")
dataPath<-"//algonas.csd.uoc.gr/Public/Dataome/"
Platforms<-read.table("UsefulFiles/Platforms.txt", sep="\t", header=T)
i=1
indFile<-read.table(paste0(dataPath,Platforms$Technology[i],".txt"), sep="\t", header=T)
annotCsv<-list.files(paste0(dataPath,Platforms$Species[i],"/",Platforms$Technology[i]),"Annot.csv")
gses<-unlist(strsplit(annotCsv,"_Annot.csv"))
missing<-setdiff(indFile$GSE,gses)
Platforms$Technology[i]
#EXISTING DATASETS IN RDA
patt<-"GSE[0-9]+.Rda$"
dataRda<-list.files(paste0(dataPath,Platforms$Species[i],"/",Platforms$Technology[i]),patt)
gses<-unlist(strsplit(dataRda,"Rda"))
missing<-setdiff(indFile$GSE,gses)
patt<-"GSE[0-9]+.Rda$"
dataRda<-list.files(paste0(dataPath,Platforms$Species[i],"/",Platforms$Technology[i]),patt)
gses<-unlist(strsplit(dataRda,".Rda"))
missing<-setdiff(indFile$GSE,gses)
missing
missing
Platforms$Technology[i]
#EXISTING Annotation IN RDA
annotRda<-list.files(paste0(dataPath,Platforms$Species[i],"/",Platforms$Technology[i]),"Annot.Rda")
#EXISTING Annotation IN RDA
annotRda<-list.files(paste0(dataPath,Platforms$Species[i],"/",Platforms$Technology[i]),"Annot.Rda")
gses<-unlist(strsplit(annotRda,"Annot.Rda"))
missing<-setdiff(indFile$GSE,gses)
length(missing)
missing[i]
Platforms$Technology[i]
metadata<-GSEmetadata(missing[i],Platforms$Technology[i])
