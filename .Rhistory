i=1
dsetsC<-combs[i,]
dsetsC<-c("GSE30219","GSE40791","GSE31210","GSE50081","GSE27262","GSE10245","GSE18842","GSE43580",
"GSE19188","GSE10445", "GSE12667", "GSE33532", "GSE77803")
dsetsC<-paste0(dsetsC,".Rda")
combs<-t(combn(dsetsC,3))
kappa<-c(2,5,7,10,50,100,500, 1000)
k2<-seq(1000,54000,2000)
kappa<-c(kappa,k2)
#explainClique<-c()
explainRandomGJ<-c()
#explainRandom<-c()
explainCliqueGJ<-c()
findK<-c()
j=1
dsetsC<-combs[j,]
explainCliqueGJ<-c()
for (i in kappa){
#dsets<-sample(setdiff(unique(c(KLsNew$dset1,KLsNew$dset2)),dsetsC),length(dsetsC),replace = F)
#avCR<-c(avCR,cliqueKL(dsets,df))
#dsets<-paste0(dsets,".Rda")
#explainRandom<-c(explainRandom,explainKL(dsets,i)[1] )
#explainClique<-c(explainClique,explainKL(dsetsC,i)[1])
#explainRandomGJ<-c(explainRandomGJ,explainKL(dsets,i)[2] )
explainCliqueGJ<-c(explainCliqueGJ,explainKL(dsetsC,i)[2])
#print(i)
}
explainCliqueGJ
plot(explainCliqueGJ)
kappa<-c(2,5,7,10,50,100,500, 1000)
k2<-seq(1000,20000,2000)
kappa
k2
kappa<-c(kappa,k2)
explainCliqueGJ
kappa
explainCliqueGJ[1:18]
dsetsC<-c("GSE30219","GSE40791","GSE31210","GSE50081","GSE27262","GSE10245","GSE18842","GSE43580",
"GSE19188","GSE10445", "GSE12667", "GSE33532", "GSE77803")
dsetsC<-paste0(dsetsC,".Rda")
combs<-t(combn(dsetsC,3))
kappa<-c(2,5,7,10,50,100,500, 1000)
k2<-seq(1000,20000,2000)
kappa<-c(kappa,k2)
#explainClique<-c()
explainRandomGJ<-c()
#explainRandom<-c()
findK<-c()
for (j in 1:nrow(combs)){
dsetsC<-combs[j,]
#kappa<-seq(38000,54000,2000)
explainCliqueGJ<-c()
for (i in kappa){
#dsets<-sample(setdiff(unique(c(KLsNew$dset1,KLsNew$dset2)),dsetsC),length(dsetsC),replace = F)
#avCR<-c(avCR,cliqueKL(dsets,df))
#dsets<-paste0(dsets,".Rda")
#explainRandom<-c(explainRandom,explainKL(dsets,i)[1] )
#explainClique<-c(explainClique,explainKL(dsetsC,i)[1])
#explainRandomGJ<-c(explainRandomGJ,explainKL(dsets,i)[2] )
explainCliqueGJ<-c(explainCliqueGJ,explainKL(dsetsC,i)[2])
#print(i)
}
findK<-rbind(findK,explainCliqueGJ)
print(j)
}
View(findK)
dim(findK)
dim(dat)
length(kappa)
matplot(t(findK), type = c("b"),pch=1,col = 1:4,
xaxt="n", main ="Lung Cancer-3dsets-combinations",
xlab="number of variables", ylab="Jaccard") #plot
axis(1, at = c(1:length(kappa)), labels=kappa , las=1)
matplot(t(findK), type = c("b"),pch=1,
xaxt="n", main ="Lung Cancer-3dsets-combinations",
xlab="number of variables", ylab="Jaccard") #plot
axis(1, at = c(1:length(kappa)), labels=kappa , las=1)
i
j
for (j in 12:nrow(combs)){
dsetsC<-combs[j,]
#kappa<-seq(38000,54000,2000)
explainCliqueGJ<-c()
for (i in kappa){
#dsets<-sample(setdiff(unique(c(KLsNew$dset1,KLsNew$dset2)),dsetsC),length(dsetsC),replace = F)
#avCR<-c(avCR,cliqueKL(dsets,df))
#dsets<-paste0(dsets,".Rda")
#explainRandom<-c(explainRandom,explainKL(dsets,i)[1] )
#explainClique<-c(explainClique,explainKL(dsetsC,i)[1])
#explainRandomGJ<-c(explainRandomGJ,explainKL(dsets,i)[2] )
explainCliqueGJ<-c(explainCliqueGJ,explainKL(dsetsC,i)[2])
#print(i)
}
findK<-rbind(findK,explainCliqueGJ)
print(j)
}
matplot(t(findK), type = c("b"),pch=1,
xaxt="n", main ="Lung Cancer-3dsets-combinations",
xlab="number of variables", ylab="Jaccard") #plot
axis(1, at = c(1:length(kappa)), labels=kappa , las=1)
j
for (j in 23:nrow(combs)){
dsetsC<-combs[j,]
#kappa<-seq(38000,54000,2000)
explainCliqueGJ<-c()
for (i in kappa){
#dsets<-sample(setdiff(unique(c(KLsNew$dset1,KLsNew$dset2)),dsetsC),length(dsetsC),replace = F)
#avCR<-c(avCR,cliqueKL(dsets,df))
#dsets<-paste0(dsets,".Rda")
#explainRandom<-c(explainRandom,explainKL(dsets,i)[1] )
#explainClique<-c(explainClique,explainKL(dsetsC,i)[1])
#explainRandomGJ<-c(explainRandomGJ,explainKL(dsets,i)[2] )
explainCliqueGJ<-c(explainCliqueGJ,explainKL(dsetsC,i)[2])
#print(i)
}
findK<-rbind(findK,explainCliqueGJ)
print(j)
}
matplot(t(findK), type = c("b"),pch=1,
xaxt="n", main ="Lung Cancer-3dsets-combinations",
xlab="number of variables", ylab="Jaccard") #plot
axis(1, at = c(1:length(kappa)), labels=kappa , las=1)
View(combs)
j
for (j in 47:nrow(combs)){
dsetsC<-combs[j,]
#kappa<-seq(38000,54000,2000)
explainCliqueGJ<-c()
for (i in kappa){
#dsets<-sample(setdiff(unique(c(KLsNew$dset1,KLsNew$dset2)),dsetsC),length(dsetsC),replace = F)
#avCR<-c(avCR,cliqueKL(dsets,df))
#dsets<-paste0(dsets,".Rda")
#explainRandom<-c(explainRandom,explainKL(dsets,i)[1] )
#explainClique<-c(explainClique,explainKL(dsetsC,i)[1])
#explainRandomGJ<-c(explainRandomGJ,explainKL(dsets,i)[2] )
explainCliqueGJ<-c(explainCliqueGJ,explainKL(dsetsC,i)[2])
#print(i)
}
findK<-rbind(findK,explainCliqueGJ)
print(j)
}
matplot(t(findK), type = c("b"),pch=1,
xaxt="n", main ="Lung Cancer-3dsets-combinations",
xlab="number of variables", ylab="Jaccard") #plot
axis(1, at = c(1:length(kappa)), labels=kappa , las=1)
#legend("topleft", legend = c("Random","Clique", "RandomGJ", "CliqueGJ"), col=1:4, pch=1) # optional legend
dsets
combs1<-t(combn(dsets,2))
explainKL<-list()
i=1
d1<-get(load(paste0(pcaDir,combs1[i,1])))
d2<-get(load(paste0(pcaDir,combs1[i,2])))
View(combs1)
source('E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/KLdiv.R')
source('E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/KLdiv.R')
KL<-KLdiv(d1,d2)
KL
KLdiv(d1,d2)[4]
nvars
dsets
d1<-get(load(paste0(pcaDir,dsets[1])))
d2<-get(load(paste0(pcaDir,dsets[2])))
KL<-KLdiv(d1,d2)[4]
retained1<-min(which(stats:::summary.prcomp(d1)$importance[3, ]>=0.5))
retained2<-min(which(stats:::summary.prcomp(d2)$importance[3, ]>=0.5))
eigenvalues1 <- (d1$sdev)^2
eigenvalues1 <- eigenvalues1[1:retained1]
eigenvectors1 <-d1$rotation[,1:retained1]
eigenvalues2 <- (d2$sdev)^2
eigenvalues2 <- eigenvalues2[1:retained2]
eigenvectors2 <-d2$rotation[,1:retained2]
nvars<-nrow(eigenvectors1)
alpha<-1/(nvars-retained1) * (nvars - sum(eigenvalues1[1:retained1]) )
beta<-1/(nvars-retained2) * (nvars - sum(eigenvalues2[1:retained2]) )
coefs<-  ( eigenvalues1/alpha -1  ) %*% ( 1- beta/t(eigenvalues2 )) +
(1- alpha/eigenvalues1) %*% ( t(eigenvalues2)/beta - 1)
s = rep(1, nvars)
t = rep(0, nvars)
iter <- 0
maxiters <- 150
# B<-c()
for (j in 1:nvars){
if (( s[j]!=t[j]   & iter<=maxiters   )){
iter<-iter+1
print( paste0('Iteration ', iter )    )
t=s
W = coefs * (t(eigenvectors1[t,]) %*% eigenvectors2[t,])
rowsums = rowSums( (eigenvectors1 %*% W ) * eigenvectors2  )
indexes<-order(rowsums, decreasing = T)
s = logical(nvars)
s[indexes[1:k]] = TRUE
stopifnot(iter != maxiters)
}
}
k=5
retained1<-min(which(stats:::summary.prcomp(d1)$importance[3, ]>=0.5))
retained2<-min(which(stats:::summary.prcomp(d2)$importance[3, ]>=0.5))
eigenvalues1 <- (d1$sdev)^2
eigenvalues1 <- eigenvalues1[1:retained1]
eigenvectors1 <-d1$rotation[,1:retained1]
eigenvalues2 <- (d2$sdev)^2
eigenvalues2 <- eigenvalues2[1:retained2]
eigenvectors2 <-d2$rotation[,1:retained2]
nvars<-nrow(eigenvectors1)
alpha<-1/(nvars-retained1) * (nvars - sum(eigenvalues1[1:retained1]) )
beta<-1/(nvars-retained2) * (nvars - sum(eigenvalues2[1:retained2]) )
coefs<-  ( eigenvalues1/alpha -1  ) %*% ( 1- beta/t(eigenvalues2 )) +
(1- alpha/eigenvalues1) %*% ( t(eigenvalues2)/beta - 1)
s = rep(1, nvars)
t = rep(0, nvars)
iter <- 0
maxiters <- 150
# B<-c()
for (j in 1:nvars){
if (( s[j]!=t[j]   & iter<=maxiters   )){
iter<-iter+1
print( paste0('Iteration ', iter )    )
t=s
W = coefs * (t(eigenvectors1[t,]) %*% eigenvectors2[t,])
rowsums = rowSums( (eigenvectors1 %*% W ) * eigenvectors2  )
indexes<-order(rowsums, decreasing = T)
s = logical(nvars)
s[indexes[1:k]] = TRUE
stopifnot(iter != maxiters)
}
}
which(s)
results<-list(explainKL=explainKL, KL=KL)
explainKL[[1]]
explainKL<- which(s)
results<-list(explainKL=explainKL, KL=KL)
results[[1]]
results[[2]]
d1<-get(load(paste0(pcaDir,dsets[1])))
nrow(d1$rotation)
indexes[1:k]]
which(s)
class(d1)
dd<-d1[s]
dim9eigenvectors1
dim(eigenvectors1)
explainKL
s2<-c()
for (i in 1:retained1){
s1<-c()
for (j in 1:retained2){
s1[j]<- (eigenvectors1[explainKL,i]%*%eigenvectors2[explainKL,j])^2
}
s2[i]<-sum(s1)
}
B<-sum(s2)
B
source('E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/explainKL2dsets.R')
dsets
dsets<-dsets[1:2]
explainKL2dsets(dsets,k)
k
explainKL2dsets(dsets,k)[[2]])
explainKL2dsets(dsets,k)[[2]]
d1<-get(load(paste0(pcaDir,dsets[1])))
KLs<-c()
for (k in 1:nrow(d1$rotation)){
KLs<-c(KLs,explainKL2dsets(dsets,k)[[2]])
print(k)
}
k
explainKL2dsets(dsets,k)[[2]]
length(explainKL)
s2<-c()
for (i in 1:length(explainKL)){
s1<-c()
for (j in 1:length(explainKL)){
s1[j]<- (eigenvectors1[,explainKL[i]]%*%eigenvectors2[,explainKL[j]])^2
}
s2[i]<-sum(s1)
}
B<-sum(s2)
explainKL
explainKL[i]
explainKL[j]
j=
j
s1<-c()
for (j in 1:length(explainKL)){
s1[j]<- (eigenvectors1[,explainKL[i]]%*%eigenvectors2[,explainKL[j]])^2
}
dim(eigenvectors1)
dim(eigenvectors2)
eigenvectors1[explainKL[i],]
eigenvectors2(explainKL[j],)
eigenvectors2 <-d2$rotation[,1:retained2]
explainKL[j]
eigenvectors2(explainKL[j],)
eigenvectors2[explainKL[j],]
eigenvectors1[explainKL[i],]%*%eigenvectors2[explainKL[j],]
s2<-c()
for (i in 1:length(explainKL)){
s1<-c()
for (j in 1:length(explainKL)){
s1[j]<- (t(eigenvectors1[explainKL[i],])%*%eigenvectors2[explainKL[j],])^2
}
s2[i]<-sum(s1)
}
t(eigenvectors1[explainKL[i],])%*%eigenvectors2[explainKL[j],]
eigenvectors1[explainKL[i],]%*%eigenvectors2[explainKL[j],]
eigenvectors1[explainKL[i],]%*%eigenvectors2[explainKL[j],]
eigenvectors1[explainKL[i],]
eigenvectors1[explainKL[i],]*eigenvectors2[explainKL[j],]
(eigenvectors1[explainKL[i],]*eigenvectors2[explainKL[j],])^2
eigenvectors1[explainKL[i],]%*%eigenvectors2[explainKL[j],]
t(eigenvectors1[explainKL[i],])%*%eigenvectors2[explainKL[j],]
t(eigenvectors1[explainKL[i],])
eigenvectors1[explainKL,i]
eigenvectors2[explainKL,j]
eigenvectors1[explainKL,i]%*%eigenvectors2[explainKL,j]
s1<-c()
for (j in 1:retained2){
s1[j]<- (eigenvectors1[explainKL,i]%*%eigenvectors2[explainKL,j])^2
}
s2<-c()
for (i in 1:retained1){
s1<-c()
for (j in 1:retained2){
s1[j]<- (eigenvectors1[explainKL,i]%*%eigenvectors2[explainKL,j])^2
}
s2[i]<-sum(s1)
}
B<-sum(s2)
B
source('E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/explainKL2dsets.R')
KLs<-c()
for (k in 1:nrow(d1$rotation)){
KLs<-c(KLs,explainKL2dsets(dsets,k)[[2]])
print(k)
}
dim(eigenvectors1)
dim(eigenvectors2)
dsets
d1<-get(load(paste0(pcaDir,dsets[1])))
d2<-get(load(paste0(pcaDir,dsets[2])))
# d1<-get(load(paste0(pcaDir,"GSE4290.Rda")))
#d2<-get(load(paste0(pcaDir,"GSE13576.Rda")))
retained1<-min(which(stats:::summary.prcomp(d1)$importance[3, ]>=0.5))
retained2<-min(which(stats:::summary.prcomp(d2)$importance[3, ]>=0.5))
eigenvalues1 <- (d1$sdev)^2
eigenvalues1 <- eigenvalues1[1:retained1]
eigenvectors1 <-d1$rotation[,1:retained1]
eigenvalues2 <- (d2$sdev)^2
eigenvalues2 <- eigenvalues2[1:retained2]
eigenvectors2 <-d2$rotation[,1:retained2]
nvars<-nrow(eigenvectors1)
alpha<-1/(nvars-retained1) * (nvars - sum(eigenvalues1[1:retained1]) )
beta<-1/(nvars-retained2) * (nvars - sum(eigenvalues2[1:retained2]) )
coefs<-  ( eigenvalues1/alpha -1  ) %*% ( 1- beta/t(eigenvalues2 )) +
(1- alpha/eigenvalues1) %*% ( t(eigenvalues2)/beta - 1)
s = rep(1, nvars)
t = rep(0, nvars)
iter <- 0
maxiters <- 150
# B<-c()
for (j in 1:nvars){
if (( s[j]!=t[j]   & iter<=maxiters   )){
iter<-iter+1
print( paste0('Iteration ', iter )    )
t=s
W = coefs * (t(eigenvectors1[t,]) %*% eigenvectors2[t,])
rowsums = rowSums( (eigenvectors1 %*% W ) * eigenvectors2  )
indexes<-order(rowsums, decreasing = T)
s = logical(nvars)
s[indexes[1:k]] = TRUE
stopifnot(iter != maxiters)
}
}
j
( s[j]!=t[j]   & iter<=maxiters   )
k
d1<-get(load(paste0(pcaDir,dsets[1])))
KLs<-c()
for (k in 2:nrow(d1$rotation)){
KLs<-c(KLs,explainKL2dsets(dsets,k)[[2]])
print(k)
}
plot(KLs)
d1<-get(load(paste0(pcaDir,dsets[1])))
KLs<-c()
for (k in 2:nrow(d1$rotation)){
KLs<-c(KLs,explainKL2dsets(dsets,k)[[2]])
print(k)
}
plot(KLs)
B<-c()
for (j in 1:nvars){
if (( s[j]!=t[j]   & iter<=maxiters   )){
iter<-iter+1
print( paste0('Iteration ', iter )    )
t=s
W = coefs * (t(eigenvectors1[t,]) %*% eigenvectors2[t,])
rowsums = rowSums( (eigenvectors1 %*% W ) * eigenvectors2  )
indexes<-order(rowsums, decreasing = T)
s = logical(nvars)
s[indexes[1:k]] = TRUE
s2<-c()
for (i in 1:retained1){
s1<-c()
for (j in 1:retained2){
s1[j]<- (eigenvectors1[explainKL,i]%*%eigenvectors2[explainKL,j])^2
}
s2[i]<-sum(s1)
}
B<-c(B,sum(s2))
stopifnot(iter != maxiters)
}
}
B
B<-c()
for (j in 1:nvars){
if (( s[j]!=t[j]   & iter<=maxiters   )){
iter<-iter+1
print( paste0('Iteration ', iter )    )
t=s
W = coefs * (t(eigenvectors1[t,]) %*% eigenvectors2[t,])
rowsums = rowSums( (eigenvectors1 %*% W ) * eigenvectors2  )
indexes<-order(rowsums, decreasing = T)
s = logical(nvars)
s[indexes[1:k]] = TRUE
s2<-c()
for (i in 1:retained1){
s1<-c()
for (j in 1:retained2){
s1[j]<- (eigenvectors1[indexes[1:k],i]%*%eigenvectors2[indexes[1:k],j])^2
}
s2[i]<-sum(s1)
}
B<-c(B,sum(s2))
stopifnot(iter != maxiters)
}
}
B
d1<-get(load(paste0(pcaDir,dsets[1])))
d2<-get(load(paste0(pcaDir,dsets[2])))
# d1<-get(load(paste0(pcaDir,"GSE4290.Rda")))
#d2<-get(load(paste0(pcaDir,"GSE13576.Rda")))
retained1<-min(which(stats:::summary.prcomp(d1)$importance[3, ]>=0.5))
retained2<-min(which(stats:::summary.prcomp(d2)$importance[3, ]>=0.5))
eigenvalues1 <- (d1$sdev)^2
eigenvalues1 <- eigenvalues1[1:retained1]
eigenvectors1 <-d1$rotation[,1:retained1]
eigenvalues2 <- (d2$sdev)^2
eigenvalues2 <- eigenvalues2[1:retained2]
eigenvectors2 <-d2$rotation[,1:retained2]
nvars<-nrow(eigenvectors1)
alpha<-1/(nvars-retained1) * (nvars - sum(eigenvalues1[1:retained1]) )
beta<-1/(nvars-retained2) * (nvars - sum(eigenvalues2[1:retained2]) )
coefs<-  ( eigenvalues1/alpha -1  ) %*% ( 1- beta/t(eigenvalues2 )) +
(1- alpha/eigenvalues1) %*% ( t(eigenvalues2)/beta - 1)
s = rep(1, nvars)
t = rep(0, nvars)
iter <- 0
maxiters <- 150
B<-c()
for (j in 1:nvars){
if (( s[j]!=t[j]   & iter<=maxiters   )){
iter<-iter+1
print( paste0('Iteration ', iter )    )
t=s
W = coefs * (t(eigenvectors1[t,]) %*% eigenvectors2[t,])
rowsums = rowSums( (eigenvectors1 %*% W ) * eigenvectors2  )
indexes<-order(rowsums, decreasing = T)
s = logical(nvars)
s[indexes[1:k]] = TRUE
s2<-c()
for (i in 1:retained1){
s1<-c()
for (j in 1:retained2){
s1[j]<- (eigenvectors1[indexes[1:k],i]%*%eigenvectors2[indexes[1:k],j])^2
}
s2[i]<-sum(s1)
}
B<-c(B,sum(s2))
stopifnot(iter != maxiters)
}
}
B
plot(B)
k
source('E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/explainKL2dsets.R')
a<-seq(2,nrow(d1$rotation),1000)
a
d1<-get(load(paste0(pcaDir,dsets[1])))
KLs<-c()
a<-seq(2,nrow(d1$rotation),1000)
for (k in 2:nrow(d1$rotation)){
KLs<-c(KLs,explainKL2dsets(dsets,k)[[2]])
print(k)
}
d1<-get(load(paste0(pcaDir,dsets[1])))
KLs<-c()
a<-seq(2,nrow(d1$rotation),1000)
for (k in a){
KLs<-c(KLs,explainKL2dsets(dsets,k)[[2]])
print(k)
}
plot(KLs)
d1<-get(load(paste0(pcaDir,dsets[1])))
KLs<-c()
a<-seq(2,nrow(d1$rotation),100)
for (k in a){
KLs<-c(KLs,explainKL2dsets(dsets,k)[[2]])
print(k)
}
plot(KLs)
save.image("C:/Users/kliolak/Desktop/explKL.RData")
