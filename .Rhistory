##iscommons<-match(dsetname2,commons)
##if (!is.na(iscommons)){
##   coms<-TRUE
## } else {
##  coms<-FALSE
##}
#diseases
disease1<-results$Disease[match(dsetname1,results$GSE)]
disease2<-results$Disease[match(dsetname2,results$GSE)]
ssize1<-results$Samples[match(dsetname1,results$GSE)]
ssize2<-results$Samples[match(dsetname2,results$GSE)]
KLs[i,]<-c(dsetname1,ssize1,disease1,dsetname2,ssize2,disease2,KLdiv(d1,d2))
print(i)
}
colnames(KLs)<-c("dset1","samples1","disease1","dset2","samples2","disease2","retained1","retained2","minKL","SKL","maxKL")
write.table(KLs, file="E:/Dropbox (MXM - UoC)/Paper - Landscape of Human Dataome - 2017/Results/GPL96-94datasets-similarity-graph.txt",
sep="\t",row.names = F, col.names = T)
save(KLs,file="E:/Dropbox (MXM - UoC)/Paper - Landscape of Human Dataome - 2017/Results/GPL96-94datasets-similarity-graph.Rda" )
pcaDir<-"E:/Dropbox (MXM - UoC)/Dataome/Homo Sapiens/RNASeq-PCA/"
options(stringsAsFactors = F)
rm(list=ls())
source('E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/KLdiv.R')
pcaDir<-"E:/Dropbox (MXM - UoC)/Dataome/Homo Sapiens/RNASeq-PCA/"
dlist<-list.files(path=pcaDir, pattern=".Rda")
#select dsets with >=40 sample size
indexPath<-"E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/Paper Experiments/Annotation/"
results<-read.table(paste0(indexPath,"annotRNASeq.txt"), sep="\t", header=T, stringsAsFactors = F)
#select<-which(  (results$Samples>=40) &  (results$Dublicates=="") & (results$Disease!="NA") )
select<-which(  (results$Samples>=40) &  (results$Dublicates=="")  )
dlist<-dlist[select]
select<-which(  (results$Samples>=40) &  (results$Dublicates=="")  )
View(results)
select<-which(  (results$Samples>=40) &  (results$Dublicates=="NA")  )
results$Dublicates[1]
which(  (results$Samples>=40) &  (is.na(results$Dublicates))  )
select<-which(  (results$Samples>=40) &  (is.na(results$Dublicates))  )
dlist<-dlist[select]
options(stringsAsFactors = F)
rm(list=ls())
source('E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/KLdiv.R')
pcaDir<-"E:/Dropbox (MXM - UoC)/Dataome/Homo Sapiens/RNASeq-PCA/"
dlist<-list.files(path=pcaDir, pattern=".Rda")
#select dsets with >=40 sample size
indexPath<-"E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/Paper Experiments/Annotation/"
results<-read.table(paste0(indexPath,"annotRNASeq.txt"), sep="\t", header=T, stringsAsFactors = F)
#select<-which(  (results$Samples>=40) &  (results$Dublicates=="") & (results$Disease!="NA") )
select<-which(  (results$Samples>=40) &  (is.na(results$Dublicates))  )
dlist<-dlist[select]
combs<-t(combn(dlist,2))
KLs<-matrix(NA,nrow=nrow(combs),ncol=11)
for (i in 1:nrow(combs)){
d1<-get(load(paste0(pcaDir,combs[i,1])))
d2<-get(load(paste0(pcaDir,combs[i,2])))
#check if they have common samples
dsetname1<-unlist(strsplit(combs[i,1],".Rda"))
dsetname2<-unlist(strsplit(combs[i,2],".Rda"))
##commons<-unlist(strsplit(results$Dublicates[match(dsetname1,results$GSE)],";"))
##iscommons<-match(dsetname2,commons)
##if (!is.na(iscommons)){
##   coms<-TRUE
## } else {
##  coms<-FALSE
##}
#diseases
disease1<-results$Disease[match(dsetname1,results$GSE)]
disease2<-results$Disease[match(dsetname2,results$GSE)]
ssize1<-results$Samples[match(dsetname1,results$GSE)]
ssize2<-results$Samples[match(dsetname2,results$GSE)]
KLs[i,]<-c(dsetname1,ssize1,disease1,dsetname2,ssize2,disease2,KLdiv(d1,d2))
print(i)
}
length(dlist)
colnames(KLs)<-c("dset1","samples1","disease1","dset2","samples2","disease2","retained1","retained2","minKL","SKL","maxKL")
write.table(KLs, file="E:/Dropbox (MXM - UoC)/Paper - Landscape of Human Dataome - 2017/Results/RNASeq-231datasets-similarity-graph.txt",
sep="\t",row.names = F, col.names = T)
save(KLs,file="E:/Dropbox (MXM - UoC)/Paper - Landscape of Human Dataome - 2017/Results/RNASeq-231datasets-similarity-graph.Rda" )
options(stringsAsFactors = F)
rm(list=ls())
library(visNetwork)
library(reshape)
simPath<-"E:/Dropbox (MXM - UoC)/Paper - Landscape of Human Dataome - 2017/Results/"
KLs<-get(load(paste0(simPath,"RNASeq-231datasets-similarity-graph.Rda")))
#select rows with eigenvalues >1
select<-which(  (KLs[,7]>=4) & (KLs[,8]>=4) )
KLs<-KLs[select,]
myedges <- as.data.frame(KLs[,c(1,4,10)],stringsAsFactors = F)
names(myedges) <- c("from", "to", "weight")
myedges.sorted<-myedges[order(myedges[,3], decreasing = F),]
indexPath<-"E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/Paper Experiments/Annotation/"
results<-read.table(paste0(indexPath,"annotRNASeq.txt"), sep="\t", header=T, stringsAsFactors = F)
select<-which(  (results$Samples>=40) &  (is.na(results$Dublicates)) )
nodesALL<-results[select,c("GSE","Disease")]
mynodes<-cbind(id=nodesALL$GSE, label=nodesALL$Disease ,group=nodesALL$Disease)
mynodes<-as.data.frame(mynodes,stringsAsFactors=F )
nnumber<-20
#links.pruned<-links.sorted[1:nnumber,]
myedges.pruned<-myedges.sorted[1:nnumber,]
#update mynodes
nodes.left<-unique(c(myedges.pruned[,1],myedges.pruned[,2]))
#mynodes.sorted<-arrange(mynodes, organID)
mynodes.pruned<-mynodes[match(nodes.left,mynodes[,1]),]
#mynodes.pruned<-cbind(mynodes[match(nodes.left,mynodes[,1]),],shape="dot")
visNetwork(mynodes.pruned, myedges.pruned, height = "700px", width = "100%") %>%
visOptions(selectedBy = "group",
highlightNearest = TRUE,
nodesIdSelection = TRUE) %>%
visPhysics(stabilization = T,repulsion=list(springLength=1000,springConstant=0)) %>%
#  visEdges(length=400) %>%
visLegend(width=0.2)
nnumber<-50
#links.pruned<-links.sorted[1:nnumber,]
myedges.pruned<-myedges.sorted[1:nnumber,]
#update mynodes
nodes.left<-unique(c(myedges.pruned[,1],myedges.pruned[,2]))
#mynodes.sorted<-arrange(mynodes, organID)
mynodes.pruned<-mynodes[match(nodes.left,mynodes[,1]),]
#mynodes.pruned<-cbind(mynodes[match(nodes.left,mynodes[,1]),],shape="dot")
visNetwork(mynodes.pruned, myedges.pruned, height = "700px", width = "100%") %>%
visOptions(selectedBy = "group",
highlightNearest = TRUE,
nodesIdSelection = TRUE) %>%
visPhysics(stabilization = T,repulsion=list(springLength=1000,springConstant=0)) %>%
#  visEdges(length=400) %>%
visLegend(width=0.2)
select<-which(  (results$Samples>=40) &  (is.na(results$Dublicates)) & (results$Disease!="NA"))
nodesALL<-results[select,c("GSE","Disease")]
mynodes<-cbind(id=nodesALL$GSE, label=nodesALL$Disease ,group=nodesALL$Disease)
mynodes<-as.data.frame(mynodes,stringsAsFactors=F )
nnumber<-50
#links.pruned<-links.sorted[1:nnumber,]
myedges.pruned<-myedges.sorted[1:nnumber,]
#update mynodes
nodes.left<-unique(c(myedges.pruned[,1],myedges.pruned[,2]))
#mynodes.sorted<-arrange(mynodes, organID)
mynodes.pruned<-mynodes[match(nodes.left,mynodes[,1]),]
#mynodes.pruned<-cbind(mynodes[match(nodes.left,mynodes[,1]),],shape="dot")
visNetwork(mynodes.pruned, myedges.pruned, height = "700px", width = "100%") %>%
visOptions(selectedBy = "group",
highlightNearest = TRUE,
nodesIdSelection = TRUE) %>%
visPhysics(stabilization = T,repulsion=list(springLength=1000,springConstant=0)) %>%
#  visEdges(length=400) %>%
visLegend(width=0.2)
options(stringsAsFactors = F)
rm(list=ls())
options(stringsAsFactors = F)
rm(list=ls())
#platform GPL570
annotDir<-"//algonas.csd.uoc.gr/Public/Dataome/"
#change path here
dataPath<-"//algonas.csd.uoc.gr/Public/Dataome/Homo sapiens/GPL570/"
results<-read.table(paste0(annotDir,"GPL570.txt"), sep="\t", header=T)
csvFiles<-list.files(dataPath, pattern=".csv")
csvFiles<-unlist(strsplit(csvFiles,".csv"))
dsets<-results$GSE
towrite<-setdiff(dsets,csvFiles)
4405-949
i=1
towrite[i]
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
d<-round(d, digits = 4)
write.table(d, file=paste0(dataPath,dsets[i],".csv"), sep=",")
View(d)
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
d<-round(t(d), digits = 4)
View(d)
View(d)
colnames(d)[1]<-"samples"
View(d)
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
d<-round(t(d), digits = 4)
row.names(d)<-c("samples",row.names(d))
row.names(d)
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
d<-round(t(d), digits = 4)
#row.names(d)<-c("samples",row.names(d))
write.table(d, file=paste0(dataPath,dsets[i],".csv"), sep=",",row.names = T)
c("samples",row.names(d))
row.names(d)<-c("samples",row.names(d))
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
d<-round(d, digits = 4)
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
d<-round(d, digits = 4)
colnames(d)[1]<-"samples"
View(d)
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
View(d)
samplenames<-colnames(d)
samplenames<-samplenames[grep(pattern="GSM[0-9]", samplenames)]
grep(pattern="GSM[0-9]", samplenames)
gregexpr(pattern="GSM[0-9]", samplenames)
library(stringr)
regexp <- "GSM[0-9]"
str_extract(data, regexp)
str_extract(samplenames, regexp)
regexp <- "GSM[0-9]+"
str_extract(samplenames, regexp)
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
View(d)
?write.table
c("samples",colnames(d))
c("samples",row.names(d))
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
d<-cbind(c("samples",row.names(d)),d)
View(d)
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
d<-cbind(row.names(d),d)
View(d)
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
d<-cbind(row.names(d),d)
colnames(d)<-c("samples",colnames(d))
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
d<-cbind(row.names(d),d)
dim(d)
length(c("samples",colnames(d)))
class(d)
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
d<-cbind(row.names(d),d)
colnames(d)[1]<-"samples"
View(d)
write.table(d, file=paste0(dataPath,dsets[i],".csv"), sep=",",row.names = F)
row.names(d)<-samplenames
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
row.names(d)<-samplenames
d<-cbind(row.names(d),d)
colnames(d)[1]<-"samples"
write.table(d, file=paste0(dataPath,dsets[i],".csv"), sep=",",row.names = F)
print(i)
options(stringsAsFactors = F)
rm(list=ls())
library(stringr)
#platform GPL570
annotDir<-"//algonas.csd.uoc.gr/Public/Dataome/"
#change path here
dataPath<-"//algonas.csd.uoc.gr/Public/Dataome/Homo sapiens/GPL570/"
results<-read.table(paste0(annotDir,"GPL570.txt"), sep="\t", header=T)
dsets<-results$GSE
for (i in 1:length(dsets)){
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
row.names(d)<-samplenames
d<-cbind(row.names(d),d)
colnames(d)[1]<-"samples"
write.table(d, file=paste0(dataPath,dsets[i],".csv"), sep=",",row.names = F)
print(i)
}
dsets[i]
for (i in 1:length(dsets)){
d<- get(load(paste0(dataPath,dsets[i],".Rda")))
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
row.names(d)<-samplenames
d<-cbind(row.names(d),d)
colnames(d)[1]<-"samples"
write.table(d, file=paste0(dataPath,dsets[i],".csv"), sep=",",row.names = F)
print(i)
}
which(dsets=="GSE10327")
i=33
d<- get(load(paste0(dataPath,dsets[i],".Rda")))
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
row.names(d)<-samplenames
d<-cbind(row.names(d),d)
colnames(d)[1]<-"samples"
View(d)
dsets[i]
d<- get(load(paste0(dataPath,dsets[i],".Rda")))
class(d)
d<- as.data.frame(get(load(paste0(dataPath,dsets[i],".Rda"))) )
View(d)
d<- as.data.frame(get(load(paste0(dataPath,dsets[i],".Rda"))) )
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
row.names(d)<-samplenames
d<-cbind(row.names(d),d)
colnames(d)[1]<-"samples"
View(d)
class(d[1,1])
class(d[1,2])
class(d[1,3])
d<- as.data.frame(get(load(paste0(dataPath,dsets[i],".Rda"))) )
class(d[1,3])
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
row.names(d)<-samplenames
class(d[1,3])
d<-cbind.data.frame(row.names(d),d)
class(d[1,3])
View(d)
d<- as.data.frame(get(load(paste0(dataPath,dsets[i],".Rda"))) )
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
row.names(d)<-samplenames
d<-cbind.data.frame(samples=row.names(d),d)
# colnames(d)[1]<-"samples"
View(d)
class(d[1,1])
class(d[1,2])
write.table(d, file=paste0(dataPath,dsets[i],".csv"), sep=",",row.names = F)
View(d)
for (i in 1:length(dsets)){
d<- as.data.frame(get(load(paste0(dataPath,dsets[i],".Rda"))) )
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
row.names(d)<-samplenames
d<-cbind.data.frame(samples=row.names(d),d)
# colnames(d)[1]<-"samples"
write.table(d, file=paste0(dataPath,dsets[i],".csv"), sep=",",row.names = F)
print(i)
}
i
for (i in 33:length(dsets)){
d<- as.data.frame(get(load(paste0(dataPath,dsets[i],".Rda"))) )
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
row.names(d)<-samplenames
d<-cbind.data.frame(samples=row.names(d),d)
# colnames(d)[1]<-"samples"
write.table(d, file=paste0(dataPath,dsets[i],".csv"), sep=",",row.names = F)
print(i)
}
for (i in 33:length(dsets)){
d<- as.data.frame(get(load(paste0(dataPath,dsets[i],".Rda"))) )
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
row.names(d)<-samplenames
d<-cbind.data.frame(samples=row.names(d),d)
# colnames(d)[1]<-"samples"
write.table(d, file=paste0(dataPath,dsets[i],".csv"), sep=",",row.names = F)
print(i)
}
for (i in 33:length(dsets)){
d<- as.data.frame(get(load(paste0(dataPath,dsets[i],".Rda"))) )
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for
row.names(d)<-samplenames
d<-cbind.data.frame(samples=row.names(d),d)
# colnames(d)[1]<-"samples"
write.table(d, file=paste0(dataPath,dsets[i],".csv"), sep=",",row.names = F)
print(i)
}
options(stringsAsFactors = F)
rm(list=ls())
library(stringr)
#platform GPL570
annotDir<-"//algonas.csd.uoc.gr/Public/Dataome/"
#change path here
dataPath<-"//algonas.csd.uoc.gr/Public/Dataome/Mus musculus/GPL1261/"
results<-read.table(paste0(annotDir,"GPL1261.txt"), sep="\t", header=T)
#select<-which(  results$Dublicates==""  & results$Samples>=40 & results$Disease!="NA")
csvFiles<-list.files(dataPath, pattern=".csv")
csvFiles<-unlist(strsplit(csvFiles,".csv"))
dsets<-results$GSE
towrite<-setdiff(dsets,csvFiles)
dsets
i=1
d<- as.data.frame(get(load(paste0(dataPath,dsets[i],".Rda"))) )
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for
row.names(d)<-samplenames
d<-cbind.data.frame(samples=row.names(d),d)
#
View(d)
for (i in 1:length(dsets)){
d<- as.data.frame(get(load(paste0(dataPath,dsets[i],".Rda"))) )
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for
row.names(d)<-samplenames
d<-cbind.data.frame(samples=row.names(d),d)
# colnames(d)[1]<-"samples"
write.table(d, file=paste0(dataPath,dsets[i],".csv"), sep=",",row.names = F)
print(i)
}
options(stringsAsFactors = F)
rm(list=ls())
library(stringr)
#platform GPL570
annotDir<-"//algonas.csd.uoc.gr/Public/Dataome/"
#change path here
dataPath<-"//algonas.csd.uoc.gr/Public/Dataome/Mus musculus/GPL1261/"
results<-read.table(paste0(annotDir,"RNASeq.txt"), sep="\t", header=T)
#select<-which(  results$Dublicates==""  & results$Samples>=40 & results$Disease!="NA")
csvFiles<-list.files(dataPath, pattern=".csv")
csvFiles<-unlist(strsplit(csvFiles,".csv"))
dsets<-results$GSE
towrite<-setdiff(dsets,csvFiles)
for (i in 1:length(dsets)){
d<- as.data.frame(get(load(paste0(dataPath,dsets[i],".Rda"))) )
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for
row.names(d)<-samplenames
d<-cbind.data.frame(samples=row.names(d),d)
# colnames(d)[1]<-"samples"
write.table(d, file=paste0(dataPath,dsets[i],".csv"), sep=",",row.names = F)
print(i)
}
options(stringsAsFactors = F)
rm(list=ls())
library(stringr)
#platform GPL570
annotDir<-"//algonas.csd.uoc.gr/Public/Dataome/"
#change path here
dataPath<-"//algonas.csd.uoc.gr/Public/Dataome/Mus musculus/GPL1261/"
results<-read.table(paste0(annotDir,"GPL1261.txt"), sep="\t", header=T)
#select<-which(  results$Dublicates==""  & results$Samples>=40 & results$Disease!="NA")
csvFiles<-list.files(dataPath, pattern=".csv")
csvFiles<-unlist(strsplit(csvFiles,".csv"))
dsets<-results$GSE
towrite<-setdiff(dsets,csvFiles)
for (i in 1:length(dsets)){
d<- as.data.frame(get(load(paste0(dataPath,dsets[i],".Rda"))) )
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for
row.names(d)<-samplenames
d<-cbind.data.frame(samples=row.names(d),d)
# colnames(d)[1]<-"samples"
write.table(d, file=paste0(dataPath,dsets[i],".csv"), sep=",",row.names = F)
print(i)
}
library(devtools)
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("roxygen2")
install.packages("knitr")
## Load the libraries
library("devtools")
library("roxygen2")
library("knitr")
## Create the package directory
create("BioDataome")
getwd()
## Create the package directory
setwd("E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/")
create("BioDataome")
