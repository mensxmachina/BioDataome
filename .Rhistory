d<- get(load(paste0(dataPath,towrite[i],".Rda")))
d<-round(t(d), digits = 4)
View(d)
View(d)
colnames(d)[1]<-"samples"
View(d)
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
d<-round(t(d), digits = 4)
row.names(d)<-c("samples",row.names(d))
row.names(d)
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
d<-round(t(d), digits = 4)
#row.names(d)<-c("samples",row.names(d))
write.table(d, file=paste0(dataPath,dsets[i],".csv"), sep=",",row.names = T)
c("samples",row.names(d))
row.names(d)<-c("samples",row.names(d))
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
d<-round(d, digits = 4)
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
d<-round(d, digits = 4)
colnames(d)[1]<-"samples"
View(d)
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
View(d)
samplenames<-colnames(d)
samplenames<-samplenames[grep(pattern="GSM[0-9]", samplenames)]
grep(pattern="GSM[0-9]", samplenames)
gregexpr(pattern="GSM[0-9]", samplenames)
library(stringr)
regexp <- "GSM[0-9]"
str_extract(data, regexp)
str_extract(samplenames, regexp)
regexp <- "GSM[0-9]+"
str_extract(samplenames, regexp)
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
View(d)
?write.table
c("samples",colnames(d))
c("samples",row.names(d))
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
d<-cbind(c("samples",row.names(d)),d)
View(d)
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
d<-cbind(row.names(d),d)
View(d)
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
d<-cbind(row.names(d),d)
colnames(d)<-c("samples",colnames(d))
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
d<-cbind(row.names(d),d)
dim(d)
length(c("samples",colnames(d)))
class(d)
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
d<-cbind(row.names(d),d)
colnames(d)[1]<-"samples"
View(d)
write.table(d, file=paste0(dataPath,dsets[i],".csv"), sep=",",row.names = F)
row.names(d)<-samplenames
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
row.names(d)<-samplenames
d<-cbind(row.names(d),d)
colnames(d)[1]<-"samples"
write.table(d, file=paste0(dataPath,dsets[i],".csv"), sep=",",row.names = F)
print(i)
options(stringsAsFactors = F)
rm(list=ls())
library(stringr)
#platform GPL570
annotDir<-"//algonas.csd.uoc.gr/Public/Dataome/"
#change path here
dataPath<-"//algonas.csd.uoc.gr/Public/Dataome/Homo sapiens/GPL570/"
results<-read.table(paste0(annotDir,"GPL570.txt"), sep="\t", header=T)
dsets<-results$GSE
for (i in 1:length(dsets)){
d<- get(load(paste0(dataPath,towrite[i],".Rda")))
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
row.names(d)<-samplenames
d<-cbind(row.names(d),d)
colnames(d)[1]<-"samples"
write.table(d, file=paste0(dataPath,dsets[i],".csv"), sep=",",row.names = F)
print(i)
}
dsets[i]
for (i in 1:length(dsets)){
d<- get(load(paste0(dataPath,dsets[i],".Rda")))
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
row.names(d)<-samplenames
d<-cbind(row.names(d),d)
colnames(d)[1]<-"samples"
write.table(d, file=paste0(dataPath,dsets[i],".csv"), sep=",",row.names = F)
print(i)
}
which(dsets=="GSE10327")
i=33
d<- get(load(paste0(dataPath,dsets[i],".Rda")))
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
row.names(d)<-samplenames
d<-cbind(row.names(d),d)
colnames(d)[1]<-"samples"
View(d)
dsets[i]
d<- get(load(paste0(dataPath,dsets[i],".Rda")))
class(d)
d<- as.data.frame(get(load(paste0(dataPath,dsets[i],".Rda"))) )
View(d)
d<- as.data.frame(get(load(paste0(dataPath,dsets[i],".Rda"))) )
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
row.names(d)<-samplenames
d<-cbind(row.names(d),d)
colnames(d)[1]<-"samples"
View(d)
class(d[1,1])
class(d[1,2])
class(d[1,3])
d<- as.data.frame(get(load(paste0(dataPath,dsets[i],".Rda"))) )
class(d[1,3])
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
row.names(d)<-samplenames
class(d[1,3])
d<-cbind.data.frame(row.names(d),d)
class(d[1,3])
View(d)
d<- as.data.frame(get(load(paste0(dataPath,dsets[i],".Rda"))) )
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
row.names(d)<-samplenames
d<-cbind.data.frame(samples=row.names(d),d)
# colnames(d)[1]<-"samples"
View(d)
class(d[1,1])
class(d[1,2])
write.table(d, file=paste0(dataPath,dsets[i],".csv"), sep=",",row.names = F)
View(d)
for (i in 1:length(dsets)){
d<- as.data.frame(get(load(paste0(dataPath,dsets[i],".Rda"))) )
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
row.names(d)<-samplenames
d<-cbind.data.frame(samples=row.names(d),d)
# colnames(d)[1]<-"samples"
write.table(d, file=paste0(dataPath,dsets[i],".csv"), sep=",",row.names = F)
print(i)
}
i
for (i in 33:length(dsets)){
d<- as.data.frame(get(load(paste0(dataPath,dsets[i],".Rda"))) )
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
row.names(d)<-samplenames
d<-cbind.data.frame(samples=row.names(d),d)
# colnames(d)[1]<-"samples"
write.table(d, file=paste0(dataPath,dsets[i],".csv"), sep=",",row.names = F)
print(i)
}
for (i in 33:length(dsets)){
d<- as.data.frame(get(load(paste0(dataPath,dsets[i],".Rda"))) )
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for the csv to load
row.names(d)<-samplenames
d<-cbind.data.frame(samples=row.names(d),d)
# colnames(d)[1]<-"samples"
write.table(d, file=paste0(dataPath,dsets[i],".csv"), sep=",",row.names = F)
print(i)
}
for (i in 33:length(dsets)){
d<- as.data.frame(get(load(paste0(dataPath,dsets[i],".Rda"))) )
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for
row.names(d)<-samplenames
d<-cbind.data.frame(samples=row.names(d),d)
# colnames(d)[1]<-"samples"
write.table(d, file=paste0(dataPath,dsets[i],".csv"), sep=",",row.names = F)
print(i)
}
options(stringsAsFactors = F)
rm(list=ls())
library(stringr)
#platform GPL570
annotDir<-"//algonas.csd.uoc.gr/Public/Dataome/"
#change path here
dataPath<-"//algonas.csd.uoc.gr/Public/Dataome/Mus musculus/GPL1261/"
results<-read.table(paste0(annotDir,"GPL1261.txt"), sep="\t", header=T)
#select<-which(  results$Dublicates==""  & results$Samples>=40 & results$Disease!="NA")
csvFiles<-list.files(dataPath, pattern=".csv")
csvFiles<-unlist(strsplit(csvFiles,".csv"))
dsets<-results$GSE
towrite<-setdiff(dsets,csvFiles)
dsets
i=1
d<- as.data.frame(get(load(paste0(dataPath,dsets[i],".Rda"))) )
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for
row.names(d)<-samplenames
d<-cbind.data.frame(samples=row.names(d),d)
#
View(d)
for (i in 1:length(dsets)){
d<- as.data.frame(get(load(paste0(dataPath,dsets[i],".Rda"))) )
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for
row.names(d)<-samplenames
d<-cbind.data.frame(samples=row.names(d),d)
# colnames(d)[1]<-"samples"
write.table(d, file=paste0(dataPath,dsets[i],".csv"), sep=",",row.names = F)
print(i)
}
options(stringsAsFactors = F)
rm(list=ls())
library(stringr)
#platform GPL570
annotDir<-"//algonas.csd.uoc.gr/Public/Dataome/"
#change path here
dataPath<-"//algonas.csd.uoc.gr/Public/Dataome/Mus musculus/GPL1261/"
results<-read.table(paste0(annotDir,"RNASeq.txt"), sep="\t", header=T)
#select<-which(  results$Dublicates==""  & results$Samples>=40 & results$Disease!="NA")
csvFiles<-list.files(dataPath, pattern=".csv")
csvFiles<-unlist(strsplit(csvFiles,".csv"))
dsets<-results$GSE
towrite<-setdiff(dsets,csvFiles)
for (i in 1:length(dsets)){
d<- as.data.frame(get(load(paste0(dataPath,dsets[i],".Rda"))) )
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for
row.names(d)<-samplenames
d<-cbind.data.frame(samples=row.names(d),d)
# colnames(d)[1]<-"samples"
write.table(d, file=paste0(dataPath,dsets[i],".csv"), sep=",",row.names = F)
print(i)
}
options(stringsAsFactors = F)
rm(list=ls())
library(stringr)
#platform GPL570
annotDir<-"//algonas.csd.uoc.gr/Public/Dataome/"
#change path here
dataPath<-"//algonas.csd.uoc.gr/Public/Dataome/Mus musculus/GPL1261/"
results<-read.table(paste0(annotDir,"GPL1261.txt"), sep="\t", header=T)
#select<-which(  results$Dublicates==""  & results$Samples>=40 & results$Disease!="NA")
csvFiles<-list.files(dataPath, pattern=".csv")
csvFiles<-unlist(strsplit(csvFiles,".csv"))
dsets<-results$GSE
towrite<-setdiff(dsets,csvFiles)
for (i in 1:length(dsets)){
d<- as.data.frame(get(load(paste0(dataPath,dsets[i],".Rda"))) )
samplenames<-colnames(d)
regexp <- "GSM[0-9]+"
samplenames<-str_extract(samplenames, regexp)
d<-round(t(d), digits = 4)
#create proper column for
row.names(d)<-samplenames
d<-cbind.data.frame(samples=row.names(d),d)
# colnames(d)[1]<-"samples"
write.table(d, file=paste0(dataPath,dsets[i],".csv"), sep=",",row.names = F)
print(i)
}
library(SCAN.UPC)
library(doParallel)
library(GEOquery)
library(rentrez)
options(stringsAsFactors = F)
dataPath<-"//algonas.csd.uoc.gr/Public/Dataome/"
tmpRAW<-"//algonas.csd.uoc.gr/Public/Dataome/tempRAW/"
#list of GEO platforms currently curated in BioDataome
#list of GEO platforms currently curated in BioDataome
Platforms<-read.table("UsefulFiles/Platforms.txt", sep="\t", header=T)
#find gene epxression microarry GEO platforms
platforms<-Platforms$Technology[which(Platforms$Entity=="Gene expression" & Platforms$Type=="in situ oligonucleotide")]
species<- Platforms$Species[which(Platforms$Entity=="Gene expression" & Platforms$Type=="in situ oligonucleotide")]
library(SCAN.UPC)
library(doParallel)
library(GEOquery)
library(rentrez)
options(stringsAsFactors = F)
setwd("E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/")
dataPath<-"//algonas.csd.uoc.gr/Public/Dataome/"
tmpRAW<-"//algonas.csd.uoc.gr/Public/Dataome/tempRAW/"
#list of GEO platforms currently curated in BioDataome
#list of GEO platforms currently curated in BioDataome
Platforms<-read.table("UsefulFiles/Platforms.txt", sep="\t", header=T)
#find gene epxression microarry GEO platforms
platforms<-Platforms$Technology[which(Platforms$Entity=="Gene expression" & Platforms$Type=="in situ oligonucleotide")]
species<- Platforms$Species[which(Platforms$Entity=="Gene expression" & Platforms$Type=="in situ oligonucleotide")]
i=1
#r_search <- entrez_search(db="gds", term=paste0("CEL[SFIL] AND ",platforms[i],"[ACCN]"),
#                          retmax =count, use_history=TRUE)
#entrezIDs<-r_search$ids
#find r_search ids that are not already in BioDataome
processedIDs<-list.files(file.path(dataPath,species[i],platforms[i]))
processedIDs<-processedIDs[grep(pattern="GSE[0-9]+.Rda$", processedIDs)]
processedIDs<-unlist(strsplit(processedIDs, ".Rda"))
#load entrezID to GSE files
#eToGSE<-get(load(paste0("UsefulFiles/","eToGSE_",platforms[i],".Rda")))
#find unique records
#eToGSEU<-paste0("GSE",unique(eToGSE[,1]))
#toProcessIDs<-setdiff(eToGSEU,processedIDs)
#for all datasets not already in in BioDataome
j=168
for (j in 168:length(processedIDs)){
#download annotation
phenos<-downloadPhenotypePlatform(processedIDs[j],platforms[i])
samples<-row.names(phenos)
#add control information in annotation
controls<-controlSamples(phenos)
phenos<-cbind(samples=samples,class=controls[match(samples,controls[,1]),2],phenos)
#write annotation file in BioDataome
write.table(phenos, file=paste0(dataPath,species[i],"/",platforms[i],"/",processedIDs[j],"_Annot.csv"),
sep=",",row.names = F)
#download raw files
#downloadRaw(processedIDs[j],tmpRAW)
#untar(file.path(tmpRAW,paste0(processedIDs[j],"_RAW.tar")), exdir = tmpRAW)
#file.remove(file.path(tmpRAW,paste0(processedIDs[j],"_RAW.tar")))
#by default downloadRaw will download all CEL files for the specific GSE
#celfiles<-list.files(tmpRAW, pattern = ".cel",ignore.case = T)
#keep only cel files that have annotation
#celsKeep<-celfiles[startsWith(celfiles,samples)]
#remove the rest
#toRemove<-setdiff(celfiles,celsKeep)
#file.remove(file.path(tmpRAW,toRemove))
#dataNorm<-preprocessGEO(tmpRAW,3)
#save Rda file
#save(dataNorm, file=paste0(dataPath,species[i],"/",platforms[i],"/",toProcessIDs[j],".Rda"))
#save .csv file
#d<-round(t(dataNorm), digits = 4)
#create proper column for csv
#row.names(d)<-samples
#d<-cbind.data.frame(samples=samples,d)
# write data in csv
#write.table(d, file=paste0(dataPath,species[i],"/",platforms[i],"/",toProcessIDs[j],".csv"),
#            sep=",",row.names = F)
#clear tmpRAW
#file.remove(dir(tmpRAW, full.names=TRUE))
#update index file
#indFile<-read.table(paste0(dataPath,platforms[i],".txt"), sep="\t", header=T)
}
source('E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/src/GEO/downloadPhenotypePlatform.R', echo=TRUE)
source('E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/src/GEO/downloadPhenotype.R', echo=TRUE)
source('E:/Dropbox (MXM - UoC)/Documents/Data-Based IR/DBIR/src/GEO/controlSamples.R', echo=TRUE)
for (j in 168:length(processedIDs)){
#download annotation
phenos<-downloadPhenotypePlatform(processedIDs[j],platforms[i])
samples<-row.names(phenos)
#add control information in annotation
controls<-controlSamples(phenos)
phenos<-cbind(samples=samples,class=controls[match(samples,controls[,1]),2],phenos)
#write annotation file in BioDataome
write.table(phenos, file=paste0(dataPath,species[i],"/",platforms[i],"/",processedIDs[j],"_Annot.csv"),
sep=",",row.names = F)
#download raw files
#downloadRaw(processedIDs[j],tmpRAW)
#untar(file.path(tmpRAW,paste0(processedIDs[j],"_RAW.tar")), exdir = tmpRAW)
#file.remove(file.path(tmpRAW,paste0(processedIDs[j],"_RAW.tar")))
#by default downloadRaw will download all CEL files for the specific GSE
#celfiles<-list.files(tmpRAW, pattern = ".cel",ignore.case = T)
#keep only cel files that have annotation
#celsKeep<-celfiles[startsWith(celfiles,samples)]
#remove the rest
#toRemove<-setdiff(celfiles,celsKeep)
#file.remove(file.path(tmpRAW,toRemove))
#dataNorm<-preprocessGEO(tmpRAW,3)
#save Rda file
#save(dataNorm, file=paste0(dataPath,species[i],"/",platforms[i],"/",toProcessIDs[j],".Rda"))
#save .csv file
#d<-round(t(dataNorm), digits = 4)
#create proper column for csv
#row.names(d)<-samples
#d<-cbind.data.frame(samples=samples,d)
# write data in csv
#write.table(d, file=paste0(dataPath,species[i],"/",platforms[i],"/",toProcessIDs[j],".csv"),
#            sep=",",row.names = F)
#clear tmpRAW
#file.remove(dir(tmpRAW, full.names=TRUE))
#update index file
#indFile<-read.table(paste0(dataPath,platforms[i],".txt"), sep="\t", header=T)
}
i
i=2
#query GEO for all series of a specific platform which also provide CEL files
# r_search <- entrez_search(db="gds", term=paste0("CEL[SFIL] AND ",platforms[i],"[ACCN]"),
#                          use_history=TRUE)
#find number of records
#count<-r_search$count
#call entrez_search again to get ALL entrezIDs
#r_search <- entrez_search(db="gds", term=paste0("CEL[SFIL] AND ",platforms[i],"[ACCN]"),
#                          retmax =count, use_history=TRUE)
#entrezIDs<-r_search$ids
#find r_search ids that are not already in BioDataome
processedIDs<-list.files(file.path(dataPath,species[i],platforms[i]))
processedIDs<-processedIDs[grep(pattern="GSE[0-9]+.Rda$", processedIDs)]
processedIDs<-unlist(strsplit(processedIDs, ".Rda"))
#load entrezID to GSE files
#eToGSE<-get(load(paste0("UsefulFiles/","eToGSE_",platforms[i],".Rda")))
#find unique records
#eToGSEU<-paste0("GSE",unique(eToGSE[,1]))
#toProcessIDs<-setdiff(eToGSEU,processedIDs)
#for all datasets not already in in BioDataome
for (j in 168:length(processedIDs)){
#download annotation
phenos<-downloadPhenotypePlatform(processedIDs[j],platforms[i])
samples<-row.names(phenos)
#add control information in annotation
controls<-controlSamples(phenos)
phenos<-cbind(samples=samples,class=controls[match(samples,controls[,1]),2],phenos)
#write annotation file in BioDataome
write.table(phenos, file=paste0(dataPath,species[i],"/",platforms[i],"/",processedIDs[j],"_Annot.csv"),
sep=",",row.names = F)
#download raw files
#downloadRaw(processedIDs[j],tmpRAW)
#untar(file.path(tmpRAW,paste0(processedIDs[j],"_RAW.tar")), exdir = tmpRAW)
#file.remove(file.path(tmpRAW,paste0(processedIDs[j],"_RAW.tar")))
#by default downloadRaw will download all CEL files for the specific GSE
#celfiles<-list.files(tmpRAW, pattern = ".cel",ignore.case = T)
#keep only cel files that have annotation
#celsKeep<-celfiles[startsWith(celfiles,samples)]
#remove the rest
#toRemove<-setdiff(celfiles,celsKeep)
#file.remove(file.path(tmpRAW,toRemove))
#dataNorm<-preprocessGEO(tmpRAW,3)
#save Rda file
#save(dataNorm, file=paste0(dataPath,species[i],"/",platforms[i],"/",toProcessIDs[j],".Rda"))
#save .csv file
#d<-round(t(dataNorm), digits = 4)
#create proper column for csv
#row.names(d)<-samples
#d<-cbind.data.frame(samples=samples,d)
# write data in csv
#write.table(d, file=paste0(dataPath,species[i],"/",platforms[i],"/",toProcessIDs[j],".csv"),
#            sep=",",row.names = F)
#clear tmpRAW
#file.remove(dir(tmpRAW, full.names=TRUE))
#update index file
#indFile<-read.table(paste0(dataPath,platforms[i],".txt"), sep="\t", header=T)
}
j
i
